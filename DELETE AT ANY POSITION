AIM 6: DELETING AN ELEMENT AT ANY 
POSITION WITHIN THE LIST.
#include <stdio.h>
#include <stdlib.h>
// Node structure
struct node {
 int data;
 struct node *next;
};
// Head pointer
struct node *head = NULL;
// Function to print the list
void printList() {
 struct node *p = head;
 printf("\n[");
 while (p != NULL) {
 printf(" %d ", p->data);
 p = p->next;
 }
 printf("]\n");
}
// Insert at beginning
void insertatbegin(int data) {
 struct node *lk = (struct node *)malloc(sizeof(struct node));
 if (lk == NULL) {
 printf("Memory allocation failed\n");
 return;
 }
 lk->data = data;
 lk->next = head;
 head = lk;
}
// Delete a node by key
void deletenode(int key) {
 struct node *temp = head, *prev = NULL;
 // If head node holds the key
 if (temp != NULL && temp->data == key) {
 head = temp->next;
 free(temp);
 return;
 }
 // Search for the key
 while (temp != NULL && temp->data != key) {
 prev = temp;
 temp = temp->next;
 }
 // If key not found
 if (temp == NULL) return;
 // Unlink and delete the node
 prev->next = temp->next;
 free(temp);
}
int main() {
 insertatbegin(12);
 insertatbegin(22);
 insertatbegin(30);
 insertatbegin(40);
 insertatbegin(55); // List: 55 40 30 22 12
 printf("Linked List: ");
 printList();
 deletenode(30);
 printf("Linked List after deletion: ");
 printList();
 return 0;
}
